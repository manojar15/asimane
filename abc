grep -E "^\"[0-9]{8}\"|^{.*\"date\":\"[0-9]{8}\"}" file.json > new_file.json
grep -E '^{.*"date":("[^"]*")?}' <filename> | awk -v d=<given_date> 'BEGIN{a[1]=substr(d,1,4);a[2]=substr(d,5,2);a[3]=substr(d,7,2);a[4]=substr(d,10,2);a[5]=substr(d,12,2);a[6]=substr(d,14,2)} {gsub(/"/,""); if(substr($0,3,8)>=d) print}'


grep -E "^\"(2022(02(28|[3-9]\d)|03\d|1[0-2]\d)|2023(0[1-9]|1[0-2])\d{2})\"|^.*\"date\":\"(2022(02(28|[3-9]\d)|03\d|1[0-2]\d)|2023(0[1-9]|1[0-2])\d{2})\"" file.json > new_file.json

grep -E "^\"(2023(02(28|[3-9]\d)|03\d|1[0-2]\d)|2024(0[1-9]|1[0-2])\d{2})\"|^.*\"date\":\"(2023(02(28|[3-9]\d)|03\d|1[0-2]\d)|2024(0[1-9]|1[0-2])\d{2})\"" file.json > new_file.json
while read -r line; do first_value=$(echo "$line" | cut -d: -f1 | sed 's/"//g'); if [ "$first_value" -ge 10 ]; then echo "$line" >> output.txt; fi; done < input.json
folder="/path/to/folder"; threshold=10; for file in "$folder"/*; do temp_file="$(mktemp)"; while read line; do first_word="$(echo "$line" | cut -d':' -f1)"; if [[ "$first_word" -gt "$threshold" ]]; then echo "$line" >> "$temp_file"; fi; done < "$file"; mv "$temp_file" "$file"; done

cat file.json | while read -r line; do echo "$line" | sed -n 's/{.*"\([a-zA-Z_][a-zA-Z0-9_]*\)":[^"]*"\([^"]*\)".*/\2/p'; done;
while read -r line; do echo "$line" | grep -o "\"[^\"]*\":.*" | sed -E 's/^[[:space:]]*"([^"]*)":[[:space:]]*"([^"]*)".*$/\2/'; done < file.json

for file in /path/to/folder/*.json; do while read -r line; do echo "$line" | grep -o "\"[^\"]*\":.*" | sed -E 's/^[[:space:]]*"([^"]*)":[[:space:]]*"([^"]*)".*$/\2/'; done < "$file"; done

for file in /path/to/folder/*.json; do while read -r line; do timestamp=$(echo "$line" | grep -o "\"[^\"]*\":\"[^\"]*T[^\"]*\"" | head -n1 | cut -d'"' -f4); if [ "$(date +%s -d "$timestamp")" -ge "$(date +%s -d "2023-03-02T00:00:00Z")" ]; then echo "$line" >> /path/to/newer_or_same_date.json; else echo "$line" >> /path/to/older_date.json; fi; done < "$file"; done
